{"version":3,"sources":["components/TodoListInput.js","components/TodoListItem.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoListInput","props","confirm","onConfirm","state","value","setState","onInputChange","event","target","onKeyPress","key","className","type","placeholder","this","onChange","onClick","React","Component","defaultProps","TodoListItem","toggle","checked","content","onRemove","id","TodoList","addItem","items","push","lastIndex","removeItem","index","findIndex","element","splice","map","item","title","renderItems","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28551be3.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class TodoListInput extends React.Component {\r\n\r\n    static defaultProps = {\r\n        placeholder: 'Title...',\r\n    }\r\n\r\n    static propTypes = {\r\n        onConfirm: PropTypes.func.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n        };\r\n    }\r\n\r\n    confirm = () => {\r\n        this.props.onConfirm(this.state.value);\r\n        this.setState({ value: '' });\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    onKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            this.setState({ value: event.target.value }, () => {\r\n                this.confirm();\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='TodoListInput'>\r\n                <input type='text' placeholder={this.props.placeholder} onKeyPress={this.onKeyPress} onChange={this.onInputChange} value={this.state.value}></input>\r\n                <input type=\"button\" value=\"Add\" onClick={this.confirm} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class TodoListItem extends React.Component {\r\n\r\n    static defaultProps = {\r\n        content: '',\r\n        checked: false,\r\n    }\r\n\r\n    static propTypes = {\r\n        onRemove: PropTypes.func.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checked: this.props.checked,\r\n        };\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({ checked: !this.state.checked });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`TodoListItem ${this.state.checked ? 'checked' : ''}`} onClick={this.toggle}>\r\n                <span className=\"TodoListItem-check \"></span>\r\n                <span className=\"TodoListItem-content\">{this.props.content}</span>\r\n                <span className='TodoListItem-remove' onClick={() => { this.props.onRemove(this.props.id) }}>âœ—</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TodoListInput from './TodoListInput';\r\nimport TodoListItem from './TodoListItem';\r\n\r\nexport default class TodoList extends React.Component {\r\n\r\n    static defaultProps = {\r\n        title: 'Todo List',\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.lastIndex = 0;\r\n        this.items = [];\r\n        this.state = { items: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addItem('Buy eggs');\r\n        this.addItem('Read a book', true);\r\n        this.addItem('Organize office');\r\n        this.addItem('Send a letter');\r\n    }\r\n\r\n    addItem = (value, checked = false) => {\r\n        this.items.push([this.lastIndex++, value, checked])\r\n        this.setState({ items: this.items });\r\n    }\r\n\r\n    removeItem = (id) => {\r\n        let items = this.state.items;\r\n        let index = items.findIndex(element => { return element[0] === id });\r\n        if (index !== -1) {\r\n            items.splice(index, 1);\r\n            this.setState({ items });\r\n        }\r\n    }\r\n\r\n    renderItems() {\r\n        return this.state.items.map((item) => {\r\n            let id = item[0];\r\n            let value = item[1];\r\n            return (\r\n                <TodoListItem content={value}\r\n                    onRemove={this.removeItem}\r\n                    checked={item[2]}\r\n                    key={id} id={id} />\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='TodoList'>\r\n                <div className=\"TodoList-header\">\r\n                    <h2>{this.props.title}</h2>\r\n                    <TodoListInput onConfirm={this.addItem} />\r\n                </div>\r\n                {this.renderItems()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <TodoList title='My Todo List' />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}